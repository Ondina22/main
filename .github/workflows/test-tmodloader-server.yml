name: Run tModLoader Server

on:
  workflow_dispatch:

jobs:
  run-server:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run tModLoader Server and Handle Cancellation
        run: |
          chmod +x start-tModLoaderServer.sh

          # Create a named pipe (FIFO) for server input
          mkfifo server_input

          # Setup a trap to catch the TERM signal (sent on workflow cancellation)
          # This will send the 'exit' command to the server for a graceful shutdown.
          trap 'echo "Workflow cancelled. Sending exit command to server..."; echo "exit" > server_input; sleep 5' TERM

          # Start the server in the background, with its stdin redirected from the named pipe.
          # The '&' is important to run it in the background so the script can continue to the 'wait' command.
          ./start-tModLoaderServer.sh < server_input &

          # Save the server's process ID
          server_pid=$!

          # Wait for the server process to finish.
          # The 'wait' command will be interrupted by the trap if the workflow is cancelled.
          wait $server_pid

